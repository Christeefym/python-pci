/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.16.9
 */

#include "sipAPIpcie.h"

#line 69 "python-pcie.sip"
#include <stdint.h>
#line 12 "./sippcieuint8_t.cpp"



extern "C" {static void assign_uint8_t(void *, SIP_SSIZE_T, const void *);}
static void assign_uint8_t(void *sipDst, SIP_SSIZE_T sipDstIdx, const void *sipSrc)
{
    reinterpret_cast<uint8_t *>(sipDst)[sipDstIdx] = *reinterpret_cast<const uint8_t *>(sipSrc);
}


extern "C" {static void *array_uint8_t(SIP_SSIZE_T);}
static void *array_uint8_t(SIP_SSIZE_T sipNrElem)
{
    return new uint8_t[sipNrElem];
}


extern "C" {static void *copy_uint8_t(const void *, SIP_SSIZE_T);}
static void *copy_uint8_t(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new uint8_t(reinterpret_cast<const uint8_t *>(sipSrc)[sipSrcIdx]);
}


/* Call the mapped type's destructor. */
extern "C" {static void release_uint8_t(void *, int);}
static void release_uint8_t(void *ptr, int)
{
    delete reinterpret_cast<uint8_t *>(ptr);
}



extern "C" {static int convertTo_uint8_t(PyObject *, void **, int *, PyObject *);}
static int convertTo_uint8_t(PyObject *sipPy,void **sipCppPtrV,int *sipIsErr,PyObject *)
{
    uint8_t **sipCppPtr = reinterpret_cast<uint8_t **>(sipCppPtrV);

#line 79 "python-pcie.sip"
    if (sipIsErr == NULL)
    {
        return (PyInt_Check(sipPy));
    }

    if (sipPy == Py_None)
    {
        *sipCppPtr = new uint8_t();
        return 1;
    }

    if (PyInt_Check(sipPy))
    {
        *sipCppPtr = new uint8_t(PyInt_AS_LONG(sipPy)); 
        return 1;
    }
    return 0;
#line 69 "./sippcieuint8_t.cpp"
}


extern "C" {static PyObject *convertFrom_uint8_t(void *, PyObject *);}
static PyObject *convertFrom_uint8_t(void *sipCppV, PyObject *)
{
   uint8_t *sipCpp = reinterpret_cast<uint8_t *>(sipCppV);

#line 73 "python-pcie.sip"
    PyObject* pSize;
    pSize = PyInt_FromSize_t(*sipCpp);  
    return pSize;
#line 82 "./sippcieuint8_t.cpp"
}


sipMappedTypeDef sipTypeDef_pcie_uint8_t = {
    {
        -1,
        0,
        0,
        SIP_TYPE_MAPPED,
        sipNameNr_uint8_t,
        {0}
    },
    {
        -1,
        {0, 0, 1},
        0, 0,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    },
    assign_uint8_t,
    array_uint8_t,
    copy_uint8_t,
    release_uint8_t,
    convertTo_uint8_t,
    convertFrom_uint8_t
};
